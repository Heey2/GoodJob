package com.goodjob;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.ArrayList;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

import com.goodjob.test.TestDAO;

public class SearchInfo {
	public static void main(String[] args) {
		TestDAO dao = new TestDAO();

		ArrayList<Company> list = dao.comList();
		//e11f4c31b1b2d90885677aedb28703686d37aecc
		for (Company com : list) {
			//https://opendart.fss.or.kr/api/company.json?crtfc_key=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&corp_code=00126380
			String path = "https://opendart.fss.or.kr/api/company.json?crtfc_key=e11f4c31b1b2d90885677aedb28703686d37aecc&corp_code="+com.getCode();
			try {
				URL url = new URL(path);

				// JSON 결과
				BufferedReader bf;
				bf = new BufferedReader(new InputStreamReader(url.openStream(), "UTF-8"));
				String result = bf.readLine();
				bf.close();

				JSONParser parser = new JSONParser();
				JSONObject root = (JSONObject) parser.parse(result);
				JSONObject res = (JSONObject) root.get("result");

				JSONArray list = (JSONArray) res.get("baseList");
				JSONArray option = (JSONArray) res.get("optionList");

				for (Object product : list) {
					if (((String) ((JSONObject) product).get("kor_co_nm")).contains(name)) {
						String bank = (String) ((JSONObject) product).get("kor_co_nm");
						String title = (String) ((JSONObject) product).get("fin_prdt_nm");
						String code = (String) ((JSONObject) product).get("fin_prdt_cd");
						String period = "";
						double rate = 0;
						double maxRate = 0;

						for (Object opt : option) {
							if (((JSONObject) opt).get("fin_prdt_cd").equals(code)) {
								period = (String) ((JSONObject) opt).get("save_trm");
								rate = Double.parseDouble(((JSONObject) opt).get("intr_rate").toString());
								maxRate = Double.parseDouble(((JSONObject) opt).get("intr_rate2").toString());
								break;
							}
						}
						InfoProduct d = new InfoProduct(bank, title, period, rate, maxRate);
						table.add(d);
					}
				}
			} catch (Exception e) {
				System.out.println("emain");
				e.printStackTrace();
			}
		}
	}
}
